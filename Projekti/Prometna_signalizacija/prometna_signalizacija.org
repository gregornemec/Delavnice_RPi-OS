#+TITLE: Prometna signalizacija
#+DATE: 07.03.2018
#+AUTHOR: Gregor Nemec
#+SETUPFILE: ~/Git/org-html-themes/setup/theme-readtheorg.setup
#+SETUPFILE: ~/Git/org-html-themes/setup/theme-readtheorg.setup
#+bind: org-export-publishing-directory "./exports"
#+OPTIONS: LaTeX:t
#+OPTIONS: tex:dvipng
#+OPTIONS: toc:nil 
#+LANGUAGE: sl
#+LaTeX_CLASS: article
#+LaTeX_HEADER: \usepackage[]{babel}
#+LaTeX_HEADER: \usepackage[a4paper, left=2.5cm, right=2.5cm, top=2.5cm, bottom=2.5cm]{geometry}
#+LaTeX_HEADER: \setlength{\parindent}{0cm}

* Naloga
  Naš končni cilj je prehod za pešce za slepe in slabovidne. 

* Sestavine
  * 1x prototipna plošča
  * 1x razširitev in podaljševalni kapel GPIO pinov
  * 

* Shema

* Vezje

* Koraki izdelave

** Priklop Raspbery-Pi

** Spoznavanje Pixle in IDLE
** Spoznavanje elektrotehničnih elementov
   
*** Prototipna ploščica

*** Upornik 

*** LED dioda

*** Stikalo

*** Piskač

** GPIO

** Priklop razširitvenega priklopa na prototipno ploščico in R-Piska
   Pred sabo imaš prototipno ploščico in na njo vključen razširitveni priklop.
   Ta nam omogoča samo podaljšek, tako do posameznih pinov GPIO pridemo
   neposredno na prototipni ploščici, kar nam omogoča nekoliko lažje delo.

** Utripajoča led (1x)
   Pri tej nalogi bomo spoznali kako priklopimo eno LED diodo v vezje in jo
   krmilimo tako, da bo ta utripala. 
   
*** Vezava LED 
   

*** Programska koda
    Za delovanje programa bomo potrebovali dve zunanjivi knjižnici *gpiozero* in
    *time*. *gpiozreo* bo poskrbela da bomo lahko prižigali in ugašali lučke.
    Knjižnica *time* bo poskrbela za pavze. V programu za urejanje programske
    kode odpri datoteko semafor_pesci_zacetek.py. 

    #+BEGIN_SRC python
      import gpiozero
      import time

      #inicializacija LED diode 
      led = gpiozero.LED(27) #GPIO povemo, da imamo LED priklopljeno na pinu 27.

      while True:            #Zanka, ki se neskončno ponavlja.
          led.on()           #Z ukazom on() prižgemo LED.
          print("LED on")    #Izpis v ukazno vrstico ali lupino.
          time.sleep(1)      #Zaspi za čas v sekundah.
          led.off()          #Z ukazom off() ugasnemo LED.
          print("LED off")
          time.sleep(1)
    #+END_SRC
    
*** Vaja
    Program spremeni tako, da bodo lučke utripale počasneje ali hitreje. 
   
** Semafor za pešce (2x LED vzporedno)

*** Vezje

*** Programska koda
    Program od prej spremeni na naslednji način. 
    1. Naredi inicializacijo dveh spremenljivka za dve LED diodi, eno za zeleno
       in drugo za rdečo.
    2. V =while True:= zanko zapiši delovanje semaforja v naslednjih korakih: 
       rdeča prižgana
       zelena ugasnjena
       počakaj 3 s

       rdeča ugasnjena
       zelena prižgana
       počakaj 1 s

    #+BEGIN_SRC python
      #inicializacija semafor pešci
      pesci_zelena = gpiozero.LED(5)
      pesci_rdeca = gpiozero.LED(6)

      while True:
          pesci_rdeca.on()
          pesci_zelena.off()
          time.sleep(3)

          pesci_rdeca.off()
          pesci_zelena.on()
          time.sleep(1)
    #+END_SRC       

** Semafor za avtomobile (3x led zaporedno)

** Priklop stikala
   V tem delu bomo priklopili gumb in z njim krmilili vklop semaforja za pešce.

*** Vezava

*** Programska koda 

** Priklop piskača

*** Vezava piskača
    Piskača priklopimo posebej na povezave *GPIO21* in *GND*. 

*** Programska koda
    #+BEGIN_SRC python
      #Inicializacija piskača
      zvok = gpiozero.Buzzer()

      #vklop zvoka
      zvok.on()

      #izklop zvoka
      zvok.off()
    #+END_SRC
   
*** Vezava piskača
    
*** Programska koda

* Programska koda
  * Končni program:
  * Program za učence: 

* Viri in Literatura
  1. Gregor Anželj, *Prometna signalizacija*, 
     https://anzeljg.github.io/rpi/rpi/3201/index.html
